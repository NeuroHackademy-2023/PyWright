import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

# Mock data
np.random.seed(42)
coords = np.random.rand(100, 3) * 2 - 1

# Mock R^2 values between 0 and 1 for each node
R2 = np.random.rand(100)

# Size and color of nodes based on R^2
size = 500 * (1 - R2)  # Inverse proportion to R^2
colors = plt.cm.viridis(1 - R2)  # Use a colormap, viridis by default; higher R2 -> darker nodes

# Extract coordinates
x, y, z = zip(*coords)

# Visualize
fig = plt.figure(figsize=(10, 7))
ax = fig.add_subplot(111, projection='3d')

# Plot nodes
sc = ax.scatter(x, y, z, s=size, c=colors)

# Add a colorbar
cbar = fig.colorbar(sc, ax=ax)
cbar.set_label('Inverse R^2')

ax.set_title("Spatial Distribution of Structureâ€“Function Correspondence")
plt.show()
